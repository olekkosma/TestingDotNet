// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Players.CodedUI
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// OpenWebBrowser - Use 'OpenWebBrowserParams' to pass parameters into this method.
        /// </summary>
        public void OpenWebBrowser()
        {

            // Go to web page 'http://www.gazeta.pl/0,0.html?p=190' using new browser instance
            BrowserWindow gazetaplBrowser = BrowserWindow.Launch(new System.Uri(this.OpenWebBrowserParams.Url));
        }
        
        /// <summary>
        /// goToGoogle - Use 'goToGoogleParams' to pass parameters into this method.
        /// </summary>
        public void goToGoogle()
        {
            #region Variable Declarations
            HtmlDiv uIItemPane = this.UIGazetaplPolskaiświatWindow.UIGazetaplPolskaiświatDocument.UIVideo_player_embed2Frame.UIGazetatvPlayerDocument.UIImaAdContainerPane.UIItemFrame.UIHttpimasdkgoogleapisDocument.UIItemPane;
            HtmlIFrame uIItemFrame = this.UIGazetaplPolskaiświatWindow.UIGazetaplPolskaiświatDocument.UIVideo_player_embed2Frame.UIGazetatvPlayerDocument.UIImaAdContainerPane.UIItemFrame;
            BrowserWindow uIGazetaplPolskaiświatWindow = this.UIGazetaplPolskaiświatWindow;
            #endregion

            // Set flag to allow play back to continue if non-essential actions fail. (For example, if a mouse hover action fails.)
            Playback.PlaybackSettings.ContinueOnError = true;

            // Mouse hover  pane at (1, 1)
            Mouse.Hover(uIItemPane, new Point(1, 1));

            // Mouse hover  frame at (1, 1)
            Mouse.Hover(uIItemFrame, new Point(1, 1));

            // Reset flag to ensure that play back stops if there is an error.
            Playback.PlaybackSettings.ContinueOnError = false;

            // Go to web page 'http://google.pl/'
            uIGazetaplPolskaiświatWindow.NavigateToUrl(new System.Uri(this.goToGoogleParams.UIGazetaplPolskaiświatWindowUrl));
        }
        
        /// <summary>
        /// OpenBrowser - Use 'OpenBrowserParams' to pass parameters into this method.
        /// </summary>
        public void OpenBrowser()
        {

            // Go to web page 'https://www.google.pl/?gws_rd=ssl' using new browser instance
            BrowserWindow googleplBrowser = BrowserWindow.Launch(new System.Uri(this.OpenBrowserParams.Url));
        }
        
        /// <summary>
        /// OpenSite - Use 'OpenSiteParams' to pass parameters into this method.
        /// </summary>
        public void OpenSite()
        {
            #region Variable Declarations
            BrowserWindow uIGoogleInternetExplorWindow = this.UIGoogleInternetExplorWindow;
            #endregion

            // Go to web page 'http://localhost:59511/'
            uIGoogleInternetExplorWindow.NavigateToUrl(new System.Uri(this.OpenSiteParams.UIGoogleInternetExplorWindowUrl));
        }
        
        /// <summary>
        /// ClickPlayersNav
        /// </summary>
        public void ClickPlayersNav()
        {
            #region Variable Declarations
            HtmlHyperlink uIPlayersHyperlink = this.UIHomePagePlayersMVCInWindow.UIHomePagePlayersMVCDocument.UIPlayersCustom.UIPlayersHyperlink;
            #endregion

            // Click 'Players' link
            Mouse.Click(uIPlayersHyperlink, new Point(50, 18));
        }
        
        /// <summary>
        /// ClickCreateNewPlayer
        /// </summary>
        public void ClickCreateNewPlayer()
        {
            #region Variable Declarations
            HtmlHyperlink uICreateNewHyperlink = this.UIPlayersPlayersMVCIntWindow.UIPlayersPlayersMVCDocument.UICreateNewHyperlink;
            #endregion

            // Click 'Create New' link
            Mouse.Click(uICreateNewHyperlink, new Point(54, 14));
        }
        
        /// <summary>
        /// TypeData - Use 'TypeDataParams' to pass parameters into this method.
        /// </summary>
        public void TypeData()
        {
            #region Variable Declarations
            HtmlEdit uILastNameEdit = this.UICreatePlayersMVCInteWindow.UICreatePlayersMVCDocument.UILastNameEdit;
            HtmlEdit uIFirstNameEdit = this.UICreatePlayersMVCInteWindow.UICreatePlayersMVCDocument.UIFirstNameEdit;
            #endregion

            // Type 'olek' in 'Last Name' text box
            uILastNameEdit.Text = this.TypeDataParams.UILastNameEditText;

            // Type '{Tab}' in 'Last Name' text box
            Keyboard.SendKeys(uILastNameEdit, this.TypeDataParams.UILastNameEditSendKeys, ModifierKeys.None);

            // Type 'kosma' in 'First Name' text box
            uIFirstNameEdit.Text = this.TypeDataParams.UIFirstNameEditText;
        }
        
        /// <summary>
        /// ClickCreate
        /// </summary>
        public void ClickCreate()
        {
            #region Variable Declarations
            HtmlInputButton uICreateButton = this.UICreatePlayersMVCInteWindow.UICreatePlayersMVCDocument.UICreateButton;
            #endregion

            // Click 'Create' button
            Mouse.Click(uICreateButton, new Point(17, 26));
        }
        
        /// <summary>
        /// CheckName - Use 'CheckNameExpectedValues' to pass parameters into this method.
        /// </summary>
        public void CheckName()
        {
            #region Variable Declarations
            HtmlCell uIKosmaolekCell = this.UIPlayersPlayersMVCIntWindow.UIPlayersPlayersMVCDocument.UIItemTable.UIKosmaolekCell;
            #endregion

            // Verify that the 'InnerText' property of 'kosma olek' cell equals 'kosma olek '
            Assert.AreEqual(this.CheckNameExpectedValues.UIKosmaolekCellInnerText, uIKosmaolekCell.InnerText, "Wrong data set");
        }
        
        /// <summary>
        /// ClickDeleteButtonMenu
        /// </summary>
        public void ClickDeleteButtonMenu()
        {
            #region Variable Declarations
            HtmlHyperlink uIDeleteHyperlink = this.UIPlayersPlayersMVCIntWindow.UIPlayersPlayersMVCDocument.UIDeleteHyperlink;
            #endregion

            // Click 'Delete' link
            Mouse.Click(uIDeleteHyperlink, new Point(35, 8));
        }
        
        /// <summary>
        /// ConfirmDelete
        /// </summary>
        public void ConfirmDelete()
        {
            #region Variable Declarations
            HtmlInputButton uIDeleteButton = this.UIDeletePlayersMVCInteWindow.UIDeletePlayersMVCDocument.UIDeleteButton;
            #endregion

            // Click 'Delete' button
            Mouse.Click(uIDeleteButton, new Point(42, 10));
        }
        
        /// <summary>
        /// ClickMatchesNav
        /// </summary>
        public void ClickMatchesNav()
        {
            #region Variable Declarations
            HtmlHyperlink uIMatchesHyperlink = this.UIHomePagePlayersMVCInWindow.UIHomePagePlayersMVCDocument.UIMatchesCustom.UIMatchesHyperlink;
            #endregion

            // Click 'Matches' link
            Mouse.Click(uIMatchesHyperlink, new Point(62, 27));
        }
        
        /// <summary>
        /// ClickCreateNewMatch
        /// </summary>
        public void ClickCreateNewMatch()
        {
            #region Variable Declarations
            HtmlHyperlink uICreateNewHyperlink = this.UIMatchesPlayersMVCIntWindow.UIMatchesPlayersMVCDocument.UICreateNewCustom.UICreateNewHyperlink;
            #endregion

            // Click 'Create New' link
            Mouse.Click(uICreateNewHyperlink, new Point(58, 9));
        }
        
        /// <summary>
        /// ClickCreateFirstTime
        /// </summary>
        public void ClickCreateFirstTime()
        {
            #region Variable Declarations
            HtmlInputButton uICreateButton = this.UICreatePlayersMVCInteWindow.UICreatePlayersMVCDocument1.UICreateButton;
            #endregion

            // Click 'Create' button
            Mouse.Click(uICreateButton, new Point(54, 18));
        }
        
        /// <summary>
        /// AssertIsValidationShowing - Use 'AssertIsValidationShowingExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertIsValidationShowing()
        {
            #region Variable Declarations
            HtmlSpan uITheDatefieldisrequirPane = this.UICreatePlayersMVCInteWindow.UICreatePlayersMVCDocument1.UITheDatefieldisrequirPane;
            #endregion

            // Verify that the 'InnerText' property of 'The Date field is required.' pane equals 'The Date field is required.'
            Assert.AreEqual(this.AssertIsValidationShowingExpectedValues.UITheDatefieldisrequirPaneInnerText, uITheDatefieldisrequirPane.InnerText, "Validation doesnt showed up");
        }
        
        /// <summary>
        /// TypeDataCityDate - Use 'TypeDataCityDateParams' to pass parameters into this method.
        /// </summary>
        public void TypeDataCityDate()
        {
            #region Variable Declarations
            HtmlEdit uICityEdit = this.UICreatePlayersMVCInteWindow.UICreatePlayersMVCDocument1.UICityEdit;
            HtmlEdit uIDateEdit = this.UICreatePlayersMVCInteWindow.UICreatePlayersMVCDocument1.UIDateEdit;
            #endregion

            // Type 'Moskow' in 'City' text box
            uICityEdit.Text = this.TypeDataCityDateParams.UICityEditText;

            // Type '2017-06-05' in 'Date' text box
            uIDateEdit.Text = this.TypeDataCityDateParams.UIDateEditText;
        }
        
        /// <summary>
        /// ClickCreateSecond
        /// </summary>
        public void ClickCreateSecond()
        {
            #region Variable Declarations
            HtmlInputButton uICreateButton = this.UICreatePlayersMVCInteWindow.UICreatePlayersMVCDocument1.UICreateButton;
            #endregion

            // Click 'Create' button
            Mouse.Click(uICreateButton, new Point(27, 7));
        }
        
        /// <summary>
        /// AssesertMatchValidator - Use 'AssesertMatchValidatorExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssesertMatchValidator()
        {
            #region Variable Declarations
            HtmlSpan uIMatchresultisrequirePane = this.UICreatePlayersMVCInteWindow.UICreatePlayersMVCDocument1.UIResultErrorCustom.UIMatchresultisrequirePane;
            #endregion

            // Verify that the 'InnerText' property of 'Match result is required.' pane equals 'Match result is required.'
            Assert.AreEqual(this.AssesertMatchValidatorExpectedValues.UIMatchresultisrequirePaneInnerText, uIMatchresultisrequirePane.InnerText, "match validator doesnt works");
        }
        
        /// <summary>
        /// WriteNonValidateMatchResult - Use 'WriteNonValidateMatchResultParams' to pass parameters into this method.
        /// </summary>
        public void WriteNonValidateMatchResult()
        {
            #region Variable Declarations
            HtmlEdit uIMatchresultEdit = this.UICreatePlayersMVCInteWindow.UICreatePlayersMVCDocument1.UIMatchresultEdit;
            #endregion

            // Type '2-3' in 'Match result' text box
            uIMatchresultEdit.Text = this.WriteNonValidateMatchResultParams.UIMatchresultEditText;
        }
        
        /// <summary>
        /// ClickCreateThird
        /// </summary>
        public void ClickCreateThird()
        {
            #region Variable Declarations
            HtmlInputButton uICreateButton = this.UICreatePlayersMVCInteWindow.UICreatePlayersMVCDocument1.UICreateButton;
            #endregion

            // Click 'Create' button
            Mouse.Click(uICreateButton, new Point(37, 24));
        }
        
        /// <summary>
        /// AssertMatchValidator - Use 'AssertMatchValidatorExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMatchValidator()
        {
            #region Variable Declarations
            HtmlSpan uIMatchresultformatshoPane = this.UICreatePlayersMVCInteWindow.UICreatePlayersMVCDocument1.UIResultErrorCustom.UIMatchresultformatshoPane;
            #endregion

            // Verify that the 'InnerText' property of 'Match result format should be like 1:1' pane equals 'Match result format should be like 1:1'
            Assert.AreEqual(this.AssertMatchValidatorExpectedValues.UIMatchresultformatshoPaneInnerText, uIMatchresultformatshoPane.InnerText, "MatchValidator does not works");
        }
        
        #region Properties
        public virtual OpenWebBrowserParams OpenWebBrowserParams
        {
            get
            {
                if ((this.mOpenWebBrowserParams == null))
                {
                    this.mOpenWebBrowserParams = new OpenWebBrowserParams();
                }
                return this.mOpenWebBrowserParams;
            }
        }
        
        public virtual goToGoogleParams goToGoogleParams
        {
            get
            {
                if ((this.mgoToGoogleParams == null))
                {
                    this.mgoToGoogleParams = new goToGoogleParams();
                }
                return this.mgoToGoogleParams;
            }
        }
        
        public virtual OpenBrowserParams OpenBrowserParams
        {
            get
            {
                if ((this.mOpenBrowserParams == null))
                {
                    this.mOpenBrowserParams = new OpenBrowserParams();
                }
                return this.mOpenBrowserParams;
            }
        }
        
        public virtual OpenSiteParams OpenSiteParams
        {
            get
            {
                if ((this.mOpenSiteParams == null))
                {
                    this.mOpenSiteParams = new OpenSiteParams();
                }
                return this.mOpenSiteParams;
            }
        }
        
        public virtual TypeDataParams TypeDataParams
        {
            get
            {
                if ((this.mTypeDataParams == null))
                {
                    this.mTypeDataParams = new TypeDataParams();
                }
                return this.mTypeDataParams;
            }
        }
        
        public virtual CheckNameExpectedValues CheckNameExpectedValues
        {
            get
            {
                if ((this.mCheckNameExpectedValues == null))
                {
                    this.mCheckNameExpectedValues = new CheckNameExpectedValues();
                }
                return this.mCheckNameExpectedValues;
            }
        }
        
        public virtual AssertIsValidationShowingExpectedValues AssertIsValidationShowingExpectedValues
        {
            get
            {
                if ((this.mAssertIsValidationShowingExpectedValues == null))
                {
                    this.mAssertIsValidationShowingExpectedValues = new AssertIsValidationShowingExpectedValues();
                }
                return this.mAssertIsValidationShowingExpectedValues;
            }
        }
        
        public virtual TypeDataCityDateParams TypeDataCityDateParams
        {
            get
            {
                if ((this.mTypeDataCityDateParams == null))
                {
                    this.mTypeDataCityDateParams = new TypeDataCityDateParams();
                }
                return this.mTypeDataCityDateParams;
            }
        }
        
        public virtual AssesertMatchValidatorExpectedValues AssesertMatchValidatorExpectedValues
        {
            get
            {
                if ((this.mAssesertMatchValidatorExpectedValues == null))
                {
                    this.mAssesertMatchValidatorExpectedValues = new AssesertMatchValidatorExpectedValues();
                }
                return this.mAssesertMatchValidatorExpectedValues;
            }
        }
        
        public virtual WriteNonValidateMatchResultParams WriteNonValidateMatchResultParams
        {
            get
            {
                if ((this.mWriteNonValidateMatchResultParams == null))
                {
                    this.mWriteNonValidateMatchResultParams = new WriteNonValidateMatchResultParams();
                }
                return this.mWriteNonValidateMatchResultParams;
            }
        }
        
        public virtual AssertMatchValidatorExpectedValues AssertMatchValidatorExpectedValues
        {
            get
            {
                if ((this.mAssertMatchValidatorExpectedValues == null))
                {
                    this.mAssertMatchValidatorExpectedValues = new AssertMatchValidatorExpectedValues();
                }
                return this.mAssertMatchValidatorExpectedValues;
            }
        }
        
        public UIGazetaplPolskaiświatWindow UIGazetaplPolskaiświatWindow
        {
            get
            {
                if ((this.mUIGazetaplPolskaiświatWindow == null))
                {
                    this.mUIGazetaplPolskaiświatWindow = new UIGazetaplPolskaiświatWindow();
                }
                return this.mUIGazetaplPolskaiświatWindow;
            }
        }
        
        public UIGoogleInternetExplorWindow UIGoogleInternetExplorWindow
        {
            get
            {
                if ((this.mUIGoogleInternetExplorWindow == null))
                {
                    this.mUIGoogleInternetExplorWindow = new UIGoogleInternetExplorWindow();
                }
                return this.mUIGoogleInternetExplorWindow;
            }
        }
        
        public UIHomePagePlayersMVCInWindow UIHomePagePlayersMVCInWindow
        {
            get
            {
                if ((this.mUIHomePagePlayersMVCInWindow == null))
                {
                    this.mUIHomePagePlayersMVCInWindow = new UIHomePagePlayersMVCInWindow();
                }
                return this.mUIHomePagePlayersMVCInWindow;
            }
        }
        
        public UIPlayersPlayersMVCIntWindow UIPlayersPlayersMVCIntWindow
        {
            get
            {
                if ((this.mUIPlayersPlayersMVCIntWindow == null))
                {
                    this.mUIPlayersPlayersMVCIntWindow = new UIPlayersPlayersMVCIntWindow();
                }
                return this.mUIPlayersPlayersMVCIntWindow;
            }
        }
        
        public UICreatePlayersMVCInteWindow UICreatePlayersMVCInteWindow
        {
            get
            {
                if ((this.mUICreatePlayersMVCInteWindow == null))
                {
                    this.mUICreatePlayersMVCInteWindow = new UICreatePlayersMVCInteWindow();
                }
                return this.mUICreatePlayersMVCInteWindow;
            }
        }
        
        public UIDeletePlayersMVCInteWindow UIDeletePlayersMVCInteWindow
        {
            get
            {
                if ((this.mUIDeletePlayersMVCInteWindow == null))
                {
                    this.mUIDeletePlayersMVCInteWindow = new UIDeletePlayersMVCInteWindow();
                }
                return this.mUIDeletePlayersMVCInteWindow;
            }
        }
        
        public UIMatchesPlayersMVCIntWindow UIMatchesPlayersMVCIntWindow
        {
            get
            {
                if ((this.mUIMatchesPlayersMVCIntWindow == null))
                {
                    this.mUIMatchesPlayersMVCIntWindow = new UIMatchesPlayersMVCIntWindow();
                }
                return this.mUIMatchesPlayersMVCIntWindow;
            }
        }
        #endregion
        
        #region Fields
        private OpenWebBrowserParams mOpenWebBrowserParams;
        
        private goToGoogleParams mgoToGoogleParams;
        
        private OpenBrowserParams mOpenBrowserParams;
        
        private OpenSiteParams mOpenSiteParams;
        
        private TypeDataParams mTypeDataParams;
        
        private CheckNameExpectedValues mCheckNameExpectedValues;
        
        private AssertIsValidationShowingExpectedValues mAssertIsValidationShowingExpectedValues;
        
        private TypeDataCityDateParams mTypeDataCityDateParams;
        
        private AssesertMatchValidatorExpectedValues mAssesertMatchValidatorExpectedValues;
        
        private WriteNonValidateMatchResultParams mWriteNonValidateMatchResultParams;
        
        private AssertMatchValidatorExpectedValues mAssertMatchValidatorExpectedValues;
        
        private UIGazetaplPolskaiświatWindow mUIGazetaplPolskaiświatWindow;
        
        private UIGoogleInternetExplorWindow mUIGoogleInternetExplorWindow;
        
        private UIHomePagePlayersMVCInWindow mUIHomePagePlayersMVCInWindow;
        
        private UIPlayersPlayersMVCIntWindow mUIPlayersPlayersMVCIntWindow;
        
        private UICreatePlayersMVCInteWindow mUICreatePlayersMVCInteWindow;
        
        private UIDeletePlayersMVCInteWindow mUIDeletePlayersMVCInteWindow;
        
        private UIMatchesPlayersMVCIntWindow mUIMatchesPlayersMVCIntWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'OpenWebBrowser'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class OpenWebBrowserParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://www.gazeta.pl/0,0.html?p=190' using new browser instance
        /// </summary>
        public string Url = "http://www.gazeta.pl/0,0.html?p=190";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'goToGoogle'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class goToGoogleParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://google.pl/'
        /// </summary>
        public string UIGazetaplPolskaiświatWindowUrl = "http://google.pl/";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'OpenBrowser'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class OpenBrowserParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'https://www.google.pl/?gws_rd=ssl' using new browser instance
        /// </summary>
        public string Url = "https://www.google.pl/?gws_rd=ssl";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'OpenSite'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class OpenSiteParams
    {
        
        #region Fields
        /// <summary>
        /// Go to web page 'http://localhost:59511/'
        /// </summary>
        public string UIGoogleInternetExplorWindowUrl = "http://localhost:59511/";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TypeData'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class TypeDataParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'olek' in 'Last Name' text box
        /// </summary>
        public string UILastNameEditText = "olek";
        
        /// <summary>
        /// Type '{Tab}' in 'Last Name' text box
        /// </summary>
        public string UILastNameEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'kosma' in 'First Name' text box
        /// </summary>
        public string UIFirstNameEditText = "kosma";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'CheckName'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class CheckNameExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'kosma olek' cell equals 'kosma olek '
        /// </summary>
        public string UIKosmaolekCellInnerText = "kosma olek ";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertIsValidationShowing'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AssertIsValidationShowingExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'The Date field is required.' pane equals 'The Date field is required.'
        /// </summary>
        public string UITheDatefieldisrequirPaneInnerText = "The Date field is required.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TypeDataCityDate'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class TypeDataCityDateParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Moskow' in 'City' text box
        /// </summary>
        public string UICityEditText = "Moskow";
        
        /// <summary>
        /// Type '2017-06-05' in 'Date' text box
        /// </summary>
        public string UIDateEditText = "2017-06-05";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssesertMatchValidator'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AssesertMatchValidatorExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Match result is required.' pane equals 'Match result is required.'
        /// </summary>
        public string UIMatchresultisrequirePaneInnerText = "Match result is required.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'WriteNonValidateMatchResult'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class WriteNonValidateMatchResultParams
    {
        
        #region Fields
        /// <summary>
        /// Type '2-3' in 'Match result' text box
        /// </summary>
        public string UIMatchresultEditText = "2-3";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMatchValidator'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AssertMatchValidatorExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'InnerText' property of 'Match result format should be like 1:1' pane equals 'Match result format should be like 1:1'
        /// </summary>
        public string UIMatchresultformatshoPaneInnerText = "Match result format should be like 1:1";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGazetaplPolskaiświatWindow : BrowserWindow
    {
        
        public UIGazetaplPolskaiświatWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Gazeta.pl - Polska i świat - wiadomości | informacje | wydarzenia";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Gazeta.pl - Polska i świat - wiadomości | informacje | wydarzenia");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIGazetaplPolskaiświatDocument UIGazetaplPolskaiświatDocument
        {
            get
            {
                if ((this.mUIGazetaplPolskaiświatDocument == null))
                {
                    this.mUIGazetaplPolskaiświatDocument = new UIGazetaplPolskaiświatDocument(this);
                }
                return this.mUIGazetaplPolskaiświatDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGazetaplPolskaiświatDocument mUIGazetaplPolskaiświatDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGazetaplPolskaiświatDocument : HtmlDocument
    {
        
        public UIGazetaplPolskaiświatDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = "test_AB_Z";
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Gazeta.pl - Polska i świat - wiadomości | informacje | wydarzenia";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/0,0.html";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://www.gazeta.pl/0,0.html?p=190";
            this.WindowTitles.Add("Gazeta.pl - Polska i świat - wiadomości | informacje | wydarzenia");
            #endregion
        }
        
        #region Properties
        public UIVideo_player_embed2Frame UIVideo_player_embed2Frame
        {
            get
            {
                if ((this.mUIVideo_player_embed2Frame == null))
                {
                    this.mUIVideo_player_embed2Frame = new UIVideo_player_embed2Frame(this);
                }
                return this.mUIVideo_player_embed2Frame;
            }
        }
        #endregion
        
        #region Fields
        private UIVideo_player_embed2Frame mUIVideo_player_embed2Frame;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIVideo_player_embed2Frame : HtmlIFrame
    {
        
        public UIVideo_player_embed2Frame(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlFrame.PropertyNames.Id] = "video_player_embed2";
            this.SearchProperties[HtmlFrame.PropertyNames.Name] = null;
            this.FilterProperties[HtmlFrame.PropertyNames.AbsolutePath] = "/plej/19,158949,23288395,video.html";
            this.FilterProperties[HtmlFrame.PropertyNames.PageUrl] = "http://www.gazeta.tv/plej/19,158949,23288395,video.html?embed=1&viewSource=box_vi" +
                "deo_news&autoplay=1&noLogo=1&skin=hp+layer&showSeries=false&title=false";
            this.FilterProperties[HtmlFrame.PropertyNames.Title] = null;
            this.FilterProperties[HtmlFrame.PropertyNames.Class] = "videonews_section";
            this.FilterProperties[HtmlFrame.PropertyNames.ControlDefinition] = "width=\"370\" height=\"255\" class=\"videonew";
            this.FilterProperties[HtmlFrame.PropertyNames.TagInstance] = "3";
            this.WindowTitles.Add("Gazeta.pl - Polska i świat - wiadomości | informacje | wydarzenia");
            #endregion
        }
        
        #region Properties
        public UIGazetatvPlayerDocument UIGazetatvPlayerDocument
        {
            get
            {
                if ((this.mUIGazetatvPlayerDocument == null))
                {
                    this.mUIGazetatvPlayerDocument = new UIGazetatvPlayerDocument(this);
                }
                return this.mUIGazetatvPlayerDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIGazetatvPlayerDocument mUIGazetatvPlayerDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGazetatvPlayerDocument : HtmlDocument
    {
        
        public UIGazetatvPlayerDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "True";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Gazeta.tv Player";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/player/0,0,23288395,158949,video.html";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://video.gazeta.pl/player/0,0,23288395,158949,video.html?1&embed=1&viewSource" +
                "=box_video_news&autoplay=1&noLogo=1&skin=hp+layer&showSeries=false&title=false";
            this.WindowTitles.Add("Gazeta.pl - Polska i świat - wiadomości | informacje | wydarzenia");
            #endregion
        }
        
        #region Properties
        public UIImaAdContainerPane UIImaAdContainerPane
        {
            get
            {
                if ((this.mUIImaAdContainerPane == null))
                {
                    this.mUIImaAdContainerPane = new UIImaAdContainerPane(this);
                }
                return this.mUIImaAdContainerPane;
            }
        }
        #endregion
        
        #region Fields
        private UIImaAdContainerPane mUIImaAdContainerPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIImaAdContainerPane : HtmlDiv
    {
        
        public UIImaAdContainerPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDiv.PropertyNames.Id] = "imaAdContainer";
            this.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
            this.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"imaAdContainer\" style=\"display: block;\"";
            this.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "16";
            this.WindowTitles.Add("Gazeta.pl - Polska i świat - wiadomości | informacje | wydarzenia");
            #endregion
        }
        
        #region Properties
        public UIItemFrame UIItemFrame
        {
            get
            {
                if ((this.mUIItemFrame == null))
                {
                    this.mUIItemFrame = new UIItemFrame(this);
                }
                return this.mUIItemFrame;
            }
        }
        #endregion
        
        #region Fields
        private UIItemFrame mUIItemFrame;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemFrame : HtmlIFrame
    {
        
        public UIItemFrame(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlFrame.PropertyNames.Id] = null;
            this.SearchProperties[HtmlFrame.PropertyNames.Name] = null;
            this.FilterProperties[HtmlFrame.PropertyNames.AbsolutePath] = "/js/core/bridge3.202.0_pl.html";
            this.FilterProperties[HtmlFrame.PropertyNames.PageUrl] = "http://imasdk.googleapis.com/js/core/bridge3.202.0_pl.html#goog_685445616";
            this.FilterProperties[HtmlFrame.PropertyNames.Title] = null;
            this.FilterProperties[HtmlFrame.PropertyNames.Class] = null;
            this.FilterProperties[HtmlFrame.PropertyNames.ControlDefinition] = "width=\"370\" height=\"208\" src=\"http://ima";
            this.FilterProperties[HtmlFrame.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Gazeta.pl - Polska i świat - wiadomości | informacje | wydarzenia");
            #endregion
        }
        
        #region Properties
        public UIHttpimasdkgoogleapisDocument UIHttpimasdkgoogleapisDocument
        {
            get
            {
                if ((this.mUIHttpimasdkgoogleapisDocument == null))
                {
                    this.mUIHttpimasdkgoogleapisDocument = new UIHttpimasdkgoogleapisDocument(this);
                }
                return this.mUIHttpimasdkgoogleapisDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIHttpimasdkgoogleapisDocument mUIHttpimasdkgoogleapisDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIHttpimasdkgoogleapisDocument : HtmlDocument
    {
        
        public UIHttpimasdkgoogleapisDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "True";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/js/core/bridge3.202.0_pl.html";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://imasdk.googleapis.com/js/core/bridge3.202.0_pl.html#goog_685445616";
            this.WindowTitles.Add("Gazeta.pl - Polska i świat - wiadomości | informacje | wydarzenia");
            #endregion
        }
        
        #region Properties
        public HtmlDiv UIItemPane
        {
            get
            {
                if ((this.mUIItemPane == null))
                {
                    this.mUIItemPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIItemPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "style=\"width: 100%; height: 100%; pointer-events: auto;\"";
                    this.mUIItemPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "9";
                    this.mUIItemPane.WindowTitles.Add("Gazeta.pl - Polska i świat - wiadomości | informacje | wydarzenia");
                    #endregion
                }
                return this.mUIItemPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlDiv mUIItemPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGoogleInternetExplorWindow : BrowserWindow
    {
        
        public UIGoogleInternetExplorWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Google";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Google");
            this.WindowTitles.Add("http://localhost:59511/");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIHomePagePlayersMVCInWindow : BrowserWindow
    {
        
        public UIHomePagePlayersMVCInWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Home Page - Players MVC";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Home Page - Players MVC");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIHomePagePlayersMVCDocument UIHomePagePlayersMVCDocument
        {
            get
            {
                if ((this.mUIHomePagePlayersMVCDocument == null))
                {
                    this.mUIHomePagePlayersMVCDocument = new UIHomePagePlayersMVCDocument(this);
                }
                return this.mUIHomePagePlayersMVCDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIHomePagePlayersMVCDocument mUIHomePagePlayersMVCDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIHomePagePlayersMVCDocument : HtmlDocument
    {
        
        public UIHomePagePlayersMVCDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Home Page - Players MVC";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:59511/";
            this.WindowTitles.Add("Home Page - Players MVC");
            #endregion
        }
        
        #region Properties
        public UIPlayersCustom UIPlayersCustom
        {
            get
            {
                if ((this.mUIPlayersCustom == null))
                {
                    this.mUIPlayersCustom = new UIPlayersCustom(this);
                }
                return this.mUIPlayersCustom;
            }
        }
        
        public UIMatchesCustom UIMatchesCustom
        {
            get
            {
                if ((this.mUIMatchesCustom == null))
                {
                    this.mUIMatchesCustom = new UIMatchesCustom(this);
                }
                return this.mUIMatchesCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIPlayersCustom mUIPlayersCustom;
        
        private UIMatchesCustom mUIMatchesCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPlayersCustom : HtmlCustom
    {
        
        public UIPlayersCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "LI";
            this.SearchProperties["Id"] = "playerNav";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"playerNav\"";
            this.FilterProperties["InnerText"] = "Players";
            this.FilterProperties["TagInstance"] = "2";
            this.WindowTitles.Add("Home Page - Players MVC");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIPlayersHyperlink
        {
            get
            {
                if ((this.mUIPlayersHyperlink == null))
                {
                    this.mUIPlayersHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIPlayersHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIPlayersHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIPlayersHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIPlayersHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Players";
                    this.mUIPlayersHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Player";
                    this.mUIPlayersHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIPlayersHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:59511/Player";
                    this.mUIPlayersHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIPlayersHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Player\"";
                    this.mUIPlayersHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIPlayersHyperlink.WindowTitles.Add("Home Page - Players MVC");
                    #endregion
                }
                return this.mUIPlayersHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIPlayersHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMatchesCustom : HtmlCustom
    {
        
        public UIMatchesCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "LI";
            this.SearchProperties["Id"] = "matchNav";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"matchNav\"";
            this.FilterProperties["InnerText"] = "Matches";
            this.FilterProperties["TagInstance"] = "3";
            this.WindowTitles.Add("Home Page - Players MVC");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIMatchesHyperlink
        {
            get
            {
                if ((this.mUIMatchesHyperlink == null))
                {
                    this.mUIMatchesHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIMatchesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIMatchesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIMatchesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIMatchesHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Matches";
                    this.mUIMatchesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Match";
                    this.mUIMatchesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIMatchesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:59511/Match";
                    this.mUIMatchesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIMatchesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Match\"";
                    this.mUIMatchesHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIMatchesHyperlink.WindowTitles.Add("Home Page - Players MVC");
                    #endregion
                }
                return this.mUIMatchesHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIMatchesHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPlayersPlayersMVCIntWindow : BrowserWindow
    {
        
        public UIPlayersPlayersMVCIntWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Players - Players MVC";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Players - Players MVC");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIPlayersPlayersMVCDocument UIPlayersPlayersMVCDocument
        {
            get
            {
                if ((this.mUIPlayersPlayersMVCDocument == null))
                {
                    this.mUIPlayersPlayersMVCDocument = new UIPlayersPlayersMVCDocument(this);
                }
                return this.mUIPlayersPlayersMVCDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIPlayersPlayersMVCDocument mUIPlayersPlayersMVCDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPlayersPlayersMVCDocument : HtmlDocument
    {
        
        public UIPlayersPlayersMVCDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Players - Players MVC";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Player";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:59511/Player";
            this.WindowTitles.Add("Players - Players MVC");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UICreateNewHyperlink
        {
            get
            {
                if ((this.mUICreateNewHyperlink == null))
                {
                    this.mUICreateNewHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUICreateNewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUICreateNewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUICreateNewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUICreateNewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Create New";
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Player/Create";
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:59511/Player/Create";
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Player/Create\"";
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "6";
                    this.mUICreateNewHyperlink.WindowTitles.Add("Players - Players MVC");
                    #endregion
                }
                return this.mUICreateNewHyperlink;
            }
        }
        
        public UIItemTable UIItemTable
        {
            get
            {
                if ((this.mUIItemTable == null))
                {
                    this.mUIItemTable = new UIItemTable(this);
                }
                return this.mUIItemTable;
            }
        }
        
        public HtmlHyperlink UIDeleteHyperlink
        {
            get
            {
                if ((this.mUIDeleteHyperlink == null))
                {
                    this.mUIDeleteHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIDeleteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIDeleteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIDeleteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIDeleteHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Delete";
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Player/Delete/11";
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:59511/Player/Delete/11";
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Player/Delete/11\"";
                    this.mUIDeleteHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "22";
                    this.mUIDeleteHyperlink.WindowTitles.Add("Players - Players MVC");
                    #endregion
                }
                return this.mUIDeleteHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUICreateNewHyperlink;
        
        private UIItemTable mUIItemTable;
        
        private HtmlHyperlink mUIDeleteHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemTable : HtmlTable
    {
        
        public UIItemTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlTable.PropertyNames.Id] = null;
            this.SearchProperties[HtmlTable.PropertyNames.Name] = null;
            this.FilterProperties[HtmlTable.PropertyNames.InnerText] = "Full Name \r\n\r\nAll goals \r\n\r\nAll assists ";
            this.FilterProperties[HtmlTable.PropertyNames.ControlDefinition] = "class=\"table\"";
            this.FilterProperties[HtmlTable.PropertyNames.RowCount] = "10";
            this.FilterProperties[HtmlTable.PropertyNames.ColumnCount] = "5";
            this.FilterProperties[HtmlTable.PropertyNames.Class] = "table";
            this.FilterProperties[HtmlTable.PropertyNames.TagInstance] = "1";
            this.WindowTitles.Add("Players - Players MVC");
            #endregion
        }
        
        #region Properties
        public HtmlCell UIKosmaolekCell
        {
            get
            {
                if ((this.mUIKosmaolekCell == null))
                {
                    this.mUIKosmaolekCell = new HtmlCell(this);
                    #region Search Criteria
                    this.mUIKosmaolekCell.SearchProperties[HtmlCell.PropertyNames.Id] = null;
                    this.mUIKosmaolekCell.SearchProperties[HtmlCell.PropertyNames.Name] = null;
                    this.mUIKosmaolekCell.SearchProperties[HtmlCell.PropertyNames.MaxDepth] = "3";
                    this.mUIKosmaolekCell.SearchProperties[HtmlCell.PropertyNames.InnerText] = "kosma olek ";
                    this.mUIKosmaolekCell.FilterProperties[HtmlCell.PropertyNames.ControlDefinition] = null;
                    this.mUIKosmaolekCell.FilterProperties[HtmlCell.PropertyNames.RowIndex] = "4";
                    this.mUIKosmaolekCell.FilterProperties[HtmlCell.PropertyNames.ColumnIndex] = "0";
                    this.mUIKosmaolekCell.FilterProperties[HtmlCell.PropertyNames.Class] = null;
                    this.mUIKosmaolekCell.FilterProperties[HtmlCell.PropertyNames.TagInstance] = "16";
                    this.mUIKosmaolekCell.WindowTitles.Add("Players - Players MVC");
                    #endregion
                }
                return this.mUIKosmaolekCell;
            }
        }
        #endregion
        
        #region Fields
        private HtmlCell mUIKosmaolekCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICreatePlayersMVCInteWindow : BrowserWindow
    {
        
        public UICreatePlayersMVCInteWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Create - Players MVC";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Create - Players MVC");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UICreatePlayersMVCDocument UICreatePlayersMVCDocument
        {
            get
            {
                if ((this.mUICreatePlayersMVCDocument == null))
                {
                    this.mUICreatePlayersMVCDocument = new UICreatePlayersMVCDocument(this);
                }
                return this.mUICreatePlayersMVCDocument;
            }
        }
        
        public UICreatePlayersMVCDocument1 UICreatePlayersMVCDocument1
        {
            get
            {
                if ((this.mUICreatePlayersMVCDocument1 == null))
                {
                    this.mUICreatePlayersMVCDocument1 = new UICreatePlayersMVCDocument1(this);
                }
                return this.mUICreatePlayersMVCDocument1;
            }
        }
        #endregion
        
        #region Fields
        private UICreatePlayersMVCDocument mUICreatePlayersMVCDocument;
        
        private UICreatePlayersMVCDocument1 mUICreatePlayersMVCDocument1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICreatePlayersMVCDocument : HtmlDocument
    {
        
        public UICreatePlayersMVCDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Create - Players MVC";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Player/Create";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:59511/Player/Create";
            this.WindowTitles.Add("Create - Players MVC");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UILastNameEdit
        {
            get
            {
                if ((this.mUILastNameEdit == null))
                {
                    this.mUILastNameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUILastNameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "LastName";
                    this.mUILastNameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "LastName";
                    this.mUILastNameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Last Name";
                    this.mUILastNameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUILastNameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUILastNameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control text-box single-line";
                    this.mUILastNameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"LastName\" class=\"form-control text";
                    this.mUILastNameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUILastNameEdit.WindowTitles.Add("Create - Players MVC");
                    #endregion
                }
                return this.mUILastNameEdit;
            }
        }
        
        public HtmlEdit UIFirstNameEdit
        {
            get
            {
                if ((this.mUIFirstNameEdit == null))
                {
                    this.mUIFirstNameEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIFirstNameEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "FirstMidName";
                    this.mUIFirstNameEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "FirstMidName";
                    this.mUIFirstNameEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "First Name";
                    this.mUIFirstNameEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIFirstNameEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIFirstNameEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control text-box single-line";
                    this.mUIFirstNameEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"FirstMidName\" class=\"form-control ";
                    this.mUIFirstNameEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "3";
                    this.mUIFirstNameEdit.WindowTitles.Add("Create - Players MVC");
                    #endregion
                }
                return this.mUIFirstNameEdit;
            }
        }
        
        public HtmlInputButton UICreateButton
        {
            get
            {
                if ((this.mUICreateButton == null))
                {
                    this.mUICreateButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Create";
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\" va";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "4";
                    this.mUICreateButton.WindowTitles.Add("Create - Players MVC");
                    #endregion
                }
                return this.mUICreateButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUILastNameEdit;
        
        private HtmlEdit mUIFirstNameEdit;
        
        private HtmlInputButton mUICreateButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICreatePlayersMVCDocument1 : HtmlDocument
    {
        
        public UICreatePlayersMVCDocument1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Create - Players MVC";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Match/Create";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:59511/Match/Create";
            this.WindowTitles.Add("Create - Players MVC");
            #endregion
        }
        
        #region Properties
        public HtmlInputButton UICreateButton
        {
            get
            {
                if ((this.mUICreateButton == null))
                {
                    this.mUICreateButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Id] = "button";
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Create";
                    this.mUICreateButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" id=\"button\" type";
                    this.mUICreateButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "5";
                    this.mUICreateButton.WindowTitles.Add("Create - Players MVC");
                    #endregion
                }
                return this.mUICreateButton;
            }
        }
        
        public HtmlSpan UITheDatefieldisrequirPane
        {
            get
            {
                if ((this.mUITheDatefieldisrequirPane == null))
                {
                    this.mUITheDatefieldisrequirPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUITheDatefieldisrequirPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUITheDatefieldisrequirPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUITheDatefieldisrequirPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "The Date field is required.";
                    this.mUITheDatefieldisrequirPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUITheDatefieldisrequirPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUITheDatefieldisrequirPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "for=\"Date\"";
                    this.mUITheDatefieldisrequirPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "7";
                    this.mUITheDatefieldisrequirPane.WindowTitles.Add("Create - Players MVC");
                    #endregion
                }
                return this.mUITheDatefieldisrequirPane;
            }
        }
        
        public HtmlEdit UICityEdit
        {
            get
            {
                if ((this.mUICityEdit == null))
                {
                    this.mUICityEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUICityEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "City";
                    this.mUICityEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "City";
                    this.mUICityEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "City";
                    this.mUICityEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUICityEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUICityEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control text-box single-line input-validation-error";
                    this.mUICityEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"City\" class=\"form-control text-box";
                    this.mUICityEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUICityEdit.WindowTitles.Add("Create - Players MVC");
                    #endregion
                }
                return this.mUICityEdit;
            }
        }
        
        public HtmlEdit UIDateEdit
        {
            get
            {
                if ((this.mUIDateEdit == null))
                {
                    this.mUIDateEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIDateEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Date";
                    this.mUIDateEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Date";
                    this.mUIDateEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Date";
                    this.mUIDateEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIDateEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIDateEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control text-box single-line input-validation-error";
                    this.mUIDateEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Date\" class=\"form-control text-box";
                    this.mUIDateEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "3";
                    this.mUIDateEdit.WindowTitles.Add("Create - Players MVC");
                    #endregion
                }
                return this.mUIDateEdit;
            }
        }
        
        public UIResultErrorCustom UIResultErrorCustom
        {
            get
            {
                if ((this.mUIResultErrorCustom == null))
                {
                    this.mUIResultErrorCustom = new UIResultErrorCustom(this);
                }
                return this.mUIResultErrorCustom;
            }
        }
        
        public HtmlEdit UIMatchresultEdit
        {
            get
            {
                if ((this.mUIMatchresultEdit == null))
                {
                    this.mUIMatchresultEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIMatchresultEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "Result";
                    this.mUIMatchresultEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "Result";
                    this.mUIMatchresultEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Match result";
                    this.mUIMatchresultEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIMatchresultEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIMatchresultEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "input-validation-error form-control text-box single-line";
                    this.mUIMatchresultEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"Result\" class=\"input-validation-er";
                    this.mUIMatchresultEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "4";
                    this.mUIMatchresultEdit.WindowTitles.Add("Create - Players MVC");
                    #endregion
                }
                return this.mUIMatchresultEdit;
            }
        }
        #endregion
        
        #region Fields
        private HtmlInputButton mUICreateButton;
        
        private HtmlSpan mUITheDatefieldisrequirPane;
        
        private HtmlEdit mUICityEdit;
        
        private HtmlEdit mUIDateEdit;
        
        private UIResultErrorCustom mUIResultErrorCustom;
        
        private HtmlEdit mUIMatchresultEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIResultErrorCustom : HtmlCustom
    {
        
        public UIResultErrorCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "P";
            this.SearchProperties["Id"] = "ResultError";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"ResultError\" style=\"display: inline;";
            this.FilterProperties["TagInstance"] = "1";
            this.WindowTitles.Add("Create - Players MVC");
            #endregion
        }
        
        #region Properties
        public HtmlSpan UIMatchresultisrequirePane
        {
            get
            {
                if ((this.mUIMatchresultisrequirePane == null))
                {
                    this.mUIMatchresultisrequirePane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIMatchresultisrequirePane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIMatchresultisrequirePane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIMatchresultisrequirePane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Match result is required.";
                    this.mUIMatchresultisrequirePane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIMatchresultisrequirePane.FilterProperties[HtmlDiv.PropertyNames.Class] = "field-validation-error text-danger";
                    this.mUIMatchresultisrequirePane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"field-validation-error text-danger\" data-valmsg-replace=\"true\" data-valmsg" +
                        "-for=\"Result\"";
                    this.mUIMatchresultisrequirePane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "6";
                    this.mUIMatchresultisrequirePane.WindowTitles.Add("Create - Players MVC");
                    #endregion
                }
                return this.mUIMatchresultisrequirePane;
            }
        }
        
        public HtmlSpan UIMatchresultformatshoPane
        {
            get
            {
                if ((this.mUIMatchresultformatshoPane == null))
                {
                    this.mUIMatchresultformatshoPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUIMatchresultformatshoPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIMatchresultformatshoPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIMatchresultformatshoPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Match result format should be like 1:1";
                    this.mUIMatchresultformatshoPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIMatchresultformatshoPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "field-validation-error text-danger";
                    this.mUIMatchresultformatshoPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"field-validation-error text-danger\" data-valmsg-replace=\"true\" data-valmsg" +
                        "-for=\"Result\"";
                    this.mUIMatchresultformatshoPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "6";
                    this.mUIMatchresultformatshoPane.WindowTitles.Add("Create - Players MVC");
                    #endregion
                }
                return this.mUIMatchresultformatshoPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlSpan mUIMatchresultisrequirePane;
        
        private HtmlSpan mUIMatchresultformatshoPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDeletePlayersMVCInteWindow : BrowserWindow
    {
        
        public UIDeletePlayersMVCInteWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Delete - Players MVC";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Delete - Players MVC");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIDeletePlayersMVCDocument UIDeletePlayersMVCDocument
        {
            get
            {
                if ((this.mUIDeletePlayersMVCDocument == null))
                {
                    this.mUIDeletePlayersMVCDocument = new UIDeletePlayersMVCDocument(this);
                }
                return this.mUIDeletePlayersMVCDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIDeletePlayersMVCDocument mUIDeletePlayersMVCDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDeletePlayersMVCDocument : HtmlDocument
    {
        
        public UIDeletePlayersMVCDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Delete - Players MVC";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Player/Delete/11";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:59511/Player/Delete/11";
            this.WindowTitles.Add("Delete - Players MVC");
            #endregion
        }
        
        #region Properties
        public HtmlInputButton UIDeleteButton
        {
            get
            {
                if ((this.mUIDeleteButton == null))
                {
                    this.mUIDeleteButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUIDeleteButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUIDeleteButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUIDeleteButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Delete";
                    this.mUIDeleteButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUIDeleteButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUIDeleteButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUIDeleteButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\" va";
                    this.mUIDeleteButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "2";
                    this.mUIDeleteButton.WindowTitles.Add("Delete - Players MVC");
                    #endregion
                }
                return this.mUIDeleteButton;
            }
        }
        #endregion
        
        #region Fields
        private HtmlInputButton mUIDeleteButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMatchesPlayersMVCIntWindow : BrowserWindow
    {
        
        public UIMatchesPlayersMVCIntWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Matches - Players MVC";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Matches - Players MVC");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIMatchesPlayersMVCDocument UIMatchesPlayersMVCDocument
        {
            get
            {
                if ((this.mUIMatchesPlayersMVCDocument == null))
                {
                    this.mUIMatchesPlayersMVCDocument = new UIMatchesPlayersMVCDocument(this);
                }
                return this.mUIMatchesPlayersMVCDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIMatchesPlayersMVCDocument mUIMatchesPlayersMVCDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMatchesPlayersMVCDocument : HtmlDocument
    {
        
        public UIMatchesPlayersMVCDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Matches - Players MVC";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Match";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:59511/Match";
            this.WindowTitles.Add("Matches - Players MVC");
            #endregion
        }
        
        #region Properties
        public UICreateNewCustom UICreateNewCustom
        {
            get
            {
                if ((this.mUICreateNewCustom == null))
                {
                    this.mUICreateNewCustom = new UICreateNewCustom(this);
                }
                return this.mUICreateNewCustom;
            }
        }
        #endregion
        
        #region Fields
        private UICreateNewCustom mUICreateNewCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICreateNewCustom : HtmlCustom
    {
        
        public UICreateNewCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "LI";
            this.SearchProperties["Id"] = "addMatch";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = null;
            this.FilterProperties["ControlDefinition"] = "id=\"addMatch\"";
            this.FilterProperties["InnerText"] = "Create New ";
            this.FilterProperties["TagInstance"] = "5";
            this.WindowTitles.Add("Matches - Players MVC");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UICreateNewHyperlink
        {
            get
            {
                if ((this.mUICreateNewHyperlink == null))
                {
                    this.mUICreateNewHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUICreateNewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUICreateNewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUICreateNewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUICreateNewHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Create New";
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/Match/Create";
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:59511/Match/Create";
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/Match/Create\"";
                    this.mUICreateNewHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUICreateNewHyperlink.WindowTitles.Add("Matches - Players MVC");
                    #endregion
                }
                return this.mUICreateNewHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUICreateNewHyperlink;
        #endregion
    }
}
